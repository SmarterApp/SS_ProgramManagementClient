/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.client.domain;

import java.io.Serializable;
import java.util.Comparator;
import java.util.List;

import javax.persistence.Id;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes Tenant.
 */
@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = {@CompoundIndex(name = "tenantNameType", def = "{'name':1, 'type':1}", unique = true) })
public class Tenant implements Serializable {

    private static final long serialVersionUID = 5489193797460019880L;
    private static final String GET_RESOURCE_NAME = "/tenant/";

    @Id
    private String id;

    private String name;

    private String description;

    private TenantType type;

    private List<TenantSubscription> tenantSubscriptions;

    /**
     * @return the type
     */
    public TenantType getType() {
        return type;
    }

    /**
     * @param inType
     *        the type to set
     */
    public void setType(final TenantType inType) {
        type = inType;
    }

    public String getId() {
        return id;
    }

    public void setId(final String inId) {
        this.id = inId;
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param inName
     *        the name to set
     */
    public void setName(final String inName) {
        name = inName;
    }

    @JsonProperty
    public String getUrl() {
        return GET_RESOURCE_NAME + this.id;
    }

    public List<TenantSubscription> getTenantSubscriptions() {
        return tenantSubscriptions;
    }

    public void setTenantSubscriptions(final List<TenantSubscription> inTenantSubscriptions) {
        this.tenantSubscriptions = inTenantSubscriptions;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(final String aDescription) {
        this.description = aDescription;
    }
    public static class TenantTypeComparator implements Comparator<Tenant>, Serializable {
        private static final long serialVersionUID = 1760207316126386761L;

        @Override
        public int compare(final Tenant inTenant1, final Tenant inTenant2) {
            int ret = 0;
            if (inTenant2 == null || inTenant2.getType() == null) {
                if (inTenant1.getType() != null) {
                    ret = 1;
                }
            } else if (inTenant1.getType() == null) {
                ret = -1;
            } else {
                ret = Integer.compare(inTenant1.getType().getRank(), inTenant2.getType().getRank());
            }

            return ret;
        }
    }

    @Override
    public boolean equals(final Object obj) {
        return EqualsBuilder.reflectionEquals(this, obj);
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public int hashCode() {
        return HashCodeBuilder.reflectionHashCode(this);
    }
}
