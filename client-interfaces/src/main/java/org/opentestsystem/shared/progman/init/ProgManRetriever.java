/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.init;

import java.util.ArrayList;
import java.util.List;

import org.opentestsystem.shared.progman.client.ProgManClient;
import org.opentestsystem.shared.progman.client.domain.ClientPropertyConfiguration;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

/**
 * This class is used as a level of indirection so that we're not wiring the client directly into a spring init class.
 */
@Component
public class ProgManRetriever {

    /**
     * Logger
     */
    private static final Logger LOGGER = LoggerFactory.getLogger(ProgManRetriever.class);

    private static final int THREE = 3;
    private static final int TWO = 2;

    /**
     * program management client
     */
    @Autowired(required=false)
    private ProgManClient progManClient;

    @Value("${progman.locator}")
    private String locator = "";

    /**
     * Uses the program management client to load the configuration by component and environment name
     * @return PropertyConfiguration
     */
    public List<ClientPropertyConfiguration> loadPropertyConfiguration() {
        if (LOGGER.isDebugEnabled()) {
            LOGGER.debug("############ in loadPropertyConfiguration, locator = " + locator);
        }

        List<ClientPropertyConfiguration> configs = new ArrayList<ClientPropertyConfiguration>();
        String[] locPairs = locator.split(";");
        for (String pair : locPairs) {
            String overlay = "";
            String configName = null;
            String envName = null;
            String[] splitPair = pair.split(",");

            if (splitPair.length == THREE) {
                overlay = splitPair[2];
            }
            if (splitPair.length >= TWO) {
                configName = splitPair[0];
                envName = splitPair[1];
            }

            if (progManClient != null && configName != null && envName != null) {
                if (LOGGER.isDebugEnabled()) {
                    LOGGER.debug("######## loadPropertyConfig: loading " + configName + ", " + envName);
                }
                configs.add(progManClient.getConfiguration(configName, envName, overlay));
            } else {
                LOGGER.error("invalid params for progman property config loader. Maybe you need to add a -D arg example: -Dprogman.locator=configName,envName[,overlay] ");
            }
            LOGGER.debug("######## loaded");
        }

        return configs;
    }

}
