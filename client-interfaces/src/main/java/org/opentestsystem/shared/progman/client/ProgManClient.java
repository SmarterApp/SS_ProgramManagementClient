/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.progman.client;

import java.util.List;
import java.util.Map;

import org.opentestsystem.shared.progman.client.domain.ClientPropertyConfiguration;
import org.opentestsystem.shared.progman.client.domain.Component;
import org.opentestsystem.shared.progman.client.domain.Tenant;
import org.opentestsystem.shared.progman.client.domain.TenantChain;
import org.opentestsystem.shared.progman.client.domain.TenantType;
import org.springframework.data.domain.Pageable;

/**
 * Interface for the Program Management client
 */
public interface ProgManClient {

    /**
     * Retrieves a configuration by id
     * 
     * @param configId
     * @return PropertyConfiguration
     */
    ClientPropertyConfiguration getConfigurationById(String configId);

    /**
     * Retrieve a configuration by component name and environment name
     * 
     * @param componentName
     * @param envName
     * @return PropertyConfiguration
     */
    ClientPropertyConfiguration getConfiguration(String componentName, String envName, String overlay);

    TenantChain getTenantChain(Map<TenantType, String> userEntityAttributes);

    Map<String, Object> getCustomAssets(final String componentName, final Map<TenantType, String> userEntityAttributes);

    /**
     * Finds tenants by componentName which match the given search criteria
     * 
     * @param componentName - the component to find tenants by
     * @param inGoodStanding - if not NULL, only search for tenants which are subscribed to the given component with the given goodStanding
     * @param searchVal - filter the tenants to only return those which have a name or description containing the given searchVal
     * @param tenantType - filter the tenants to only return those which are of the given tenantType
     * @param pageable Pageable
     * @return List of Tenant objects.
     */
    List<Tenant> findTenantsByComponentAndSearchVal(String componentName, Boolean inGoodStanding, String searchVal, TenantType tenantType, Pageable pageable);

    /**
     * Gets tenant by tenantId.
     * 
     * @param tenant id.
     * @return Tenant object.
     */
    Tenant getTenantById(String tenantId);

    /**
     * Get the complete list of tenant types
     * 
     * @return List<TenantType>
     */
    List<TenantType> getTenantTypes();

    /**
     * Gets component by name
     * 
     * @param component name
     * @return Component object.
     */
    Component getComponentByName(String componentName);
}
